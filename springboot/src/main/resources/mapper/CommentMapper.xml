<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CommentMapper">


    <select id="selectAll" resultType="com.example.entity.Comment">
        select comment.*, user.name as userName, user.avatar as userAvatar from comment
        left join user on comment.user_id = user.id
        <where>
            <if test="content != null"> and comment.content like concat('%', #{content}, '%')</if>
            <if test="userId != null"> and comment.user_id = #{userId}</if>
            <if test="fid != null"> and comment.fid = #{fid}</if>
            <if test="module != null"> and comment.module = #{module} </if>
            <if test="rootId != null"> and comment.root_id = #{rootId}</if>
        </where>
        order by comment.id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Comment">
        select * from comment
        where id = #{id}
    </select>

    <select id="selectRoot" resultType="com.example.entity.Comment">
        select comment.*, user.name as userName, user.avatar as userAvatar from comment
                                                                                    left join user on comment.user_id = user.id
        where comment.fid = #{fid} and comment.module = #{module} and comment.pid is null
        order by comment.id desc
    </select>

    <select id="selectByRootId" resultType="com.example.entity.Comment">
        select comment.*, user.name as userName, user.avatar as userAvatar, u2.name as parentUserName from comment
                                                                                                               left join user on comment.user_id = user.id
                                                                                                               left join comment c2
                                                                                                                         on comment.pid = c2.id
                                                                                                               left join user u2
                                                                                                                         on c2.user_id = u2.id
        where comment.root_id = #{rootId} and comment.pid is not null
        order by comment.id desc
    </select>

    <delete id="deleteById">
        delete from comment
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Comment" useGeneratedKeys="true" keyProperty="id">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="content != null">content,</if>
            <if test="userId != null">user_id,</if>
            <if test="pid != null">pid,</if>
            <if test="time != null">time,</if>
            <if test="fid != null">fid,</if>
            <if test="module != null">module,</if>
            <if test="rootId != null">root_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="content != null">#{content},</if>
            <if test="userId != null">#{userId},</if>
            <if test="pid != null">#{pid},</if>
            <if test="time != null">#{time},</if>
            <if test="fid != null">#{fid},</if>
            <if test="module != null">#{module},</if>
            <if test="rootId != null">#{rootId},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Comment">
        update comment
        <set>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="pid != null">
                pid = #{pid},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="fid != null">
                fid = #{fid},
            </if>
            <if test="module != null">
                module = #{module},
            </if>
            <if test="rootId != null">
                root_id = #{rootId},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>